plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id("org.springdoc.openapi-gradle-plugin") version "1.9.0"
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

// JAR 파일 이름 설정
jar {
	archiveBaseName.set('Notice-BE-Spring')  // 기본 이름 설정
	archiveVersion.set('0.0.1-SNAPSHOT')  // 버전 설정
	archiveClassifier.set('')  // 별칭을 설정하지 않음
	enabled = false
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Data
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.mysql:mysql-connector-j:9.2.0'

	//QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	//SwaggerUI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

	// 메일
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// Jackson (JSON 직렬화/역직렬화)
	implementation("com.fasterxml.jackson.core:jackson-databind")

	// ConstructorBinding
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

